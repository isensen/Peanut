//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using Smark.Data.Mappings;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;


namespace NorthWind.DBModule {
    
    
    /// <summary>
    /// Smark.Data Generator Copyright © FanJianHan 2010-2012
    /// website:http://www.ikende.com
    /// </summary>
    [Serializable()]
    [Table("Categories")]
    public partial class Category : Smark.Data.Mappings.DataObject, ICategory {
        
        private int mCategoryID;
        
        /// <summary>
        /// System.Int32
        /// </summary>
        public static Smark.Data.FieldInfo categoryID = new Smark.Data.FieldInfo("Categories", "CategoryID");
        
        private string mCategoryName;
        
        /// <summary>
        /// System.String
        /// </summary>
        public static Smark.Data.FieldInfo categoryName = new Smark.Data.FieldInfo("Categories", "CategoryName");
        
        private string mDescription;
        
        /// <summary>
        /// System.String
        /// </summary>
        public static Smark.Data.FieldInfo description = new Smark.Data.FieldInfo("Categories", "Description");
        
        private byte[] mPicture;
        
        /// <summary>
        /// System.Byte
        /// </summary>
        public static Smark.Data.FieldInfo picture = new Smark.Data.FieldInfo("Categories", "Picture");
        
        [ID()]
        [IDENTITY()]
        public virtual int CategoryID {
            get {
                return this.mCategoryID;
            }
            set {
                this.mCategoryID = value;
                this.EntityState.FieldChange("CategoryID");
            }
        }
        
        [Column()]
        public virtual string CategoryName {
            get {
                return this.mCategoryName;
            }
            set {
                this.mCategoryName = value;
                this.EntityState.FieldChange("CategoryName");
            }
        }
        
        [Column()]
        public virtual string Description {
            get {
                return this.mDescription;
            }
            set {
                this.mDescription = value;
                this.EntityState.FieldChange("Description");
            }
        }
        
        [Column()]
        public virtual byte[] Picture {
            get {
                return this.mPicture;
            }
            set {
                this.mPicture = value;
                this.EntityState.FieldChange("Picture");
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using Smark.Data.Mappings;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;


namespace NorthWind.DBModule.Views {
    
    
    /// <summary>
    /// Smark.Data Generator Copyright © FanJianHan 2010-2012
    /// website:http://www.ikende.com
    /// </summary>
    [Serializable()]
    [Table("[Order Details] inner join Products on [Order Details].Productid=Products.Product" +
        "ID")]
    public partial class OrderDetail : Smark.Data.Mappings.DataObject, IOrderDetail {
        
        private int mOrderID;
        
        /// <summary>
        /// System.Int32
        /// </summary>
        public static Smark.Data.FieldInfo orderID = new Smark.Data.FieldInfo("[Order Details] inner join Products on [Order Details].Productid=Products.Product" +
                "ID", "OrderID");
        
        private int mProductID;
        
        /// <summary>
        /// System.Int32
        /// </summary>
        public static Smark.Data.FieldInfo productID = new Smark.Data.FieldInfo("[Order Details] inner join Products on [Order Details].Productid=Products.Product" +
                "ID", "Products.ProductID");
        
        private string mProductName;
        
        /// <summary>
        /// System.String
        /// </summary>
        public static Smark.Data.FieldInfo productName = new Smark.Data.FieldInfo("[Order Details] inner join Products on [Order Details].Productid=Products.Product" +
                "ID", "ProductName");
        
        private decimal mUnitPrice;
        
        /// <summary>
        /// System.Decimal
        /// </summary>
        public static Smark.Data.FieldInfo unitPrice = new Smark.Data.FieldInfo("[Order Details] inner join Products on [Order Details].Productid=Products.Product" +
                "ID", "[Order Details].ProductID");
        
        private int mQuantity;
        
        /// <summary>
        /// System.Int32
        /// </summary>
        public static Smark.Data.FieldInfo quantity = new Smark.Data.FieldInfo("[Order Details] inner join Products on [Order Details].Productid=Products.Product" +
                "ID", "Quantity");
        
        private float mDiscount;
        
        /// <summary>
        /// System.Single
        /// </summary>
        public static Smark.Data.FieldInfo discount = new Smark.Data.FieldInfo("[Order Details] inner join Products on [Order Details].Productid=Products.Product" +
                "ID", "Discount");
        
        [Column()]
        public virtual int OrderID {
            get {
                return this.mOrderID;
            }
            set {
                this.mOrderID = value;
                this.EntityState.FieldChange("OrderID");
            }
        }
        
        [Column("Products.ProductID")]
        public virtual int ProductID {
            get {
                return this.mProductID;
            }
            set {
                this.mProductID = value;
                this.EntityState.FieldChange("ProductID");
            }
        }
        
        [Column()]
        public virtual string ProductName {
            get {
                return this.mProductName;
            }
            set {
                this.mProductName = value;
                this.EntityState.FieldChange("ProductName");
            }
        }
        
        [Column("[Order Details].ProductID")]
        public virtual decimal UnitPrice {
            get {
                return this.mUnitPrice;
            }
            set {
                this.mUnitPrice = value;
                this.EntityState.FieldChange("UnitPrice");
            }
        }
        
        [Column()]
        public virtual int Quantity {
            get {
                return this.mQuantity;
            }
            set {
                this.mQuantity = value;
                this.EntityState.FieldChange("Quantity");
            }
        }
        
        [Column()]
        public virtual float Discount {
            get {
                return this.mDiscount;
            }
            set {
                this.mDiscount = value;
                this.EntityState.FieldChange("Discount");
            }
        }
    }
}
